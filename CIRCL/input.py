#!/usr/bin/env python

# Headers
import sys
import json
import urllib
import pyfiglet

from cve import cve_INFO
from cve import cveid_INFO
from cve import cvedb_INFO
from cve import cvecwe_INFO 
from cve import cvecapec_INFO
from datetime import datetime
from datetime import timezone
from datetime import timedelta

# Fetching the current data and time
current_DT = datetime.now().strftime("%Y-%m-%d")
current_TIME = datetime.now().strftime("%H:%M:%S")

# Title
titeInfo = pyfiglet.figlet_format("CIRCL CVE Crawler")
print(titeInfo)

# Defining the input
def help():
	print("Choose any options")
	print("==================")
	print('\t-c\t','c = To fetch the CVE information')
	print('\t-db\t','db = To fetch the updated CV databases')
	print('\t-cinfo\t','cinfo = To fetch the last updated CVE information')
	print('\t-cwe\t','cwe = To fetch the CWE information')
	print('\t-capec\t','capec = To fetch the CAPEC information')

# Creating system arguments
arguments = sys.argv[1:]
if len(arguments) != 0 :
	if '-c' in arguments:
		if len(arguments) <= 1:
			help()
		else:
			print(json.dumps(cveid_INFO(arguments[-1]), indent=2, sort_keys=True))
	elif '-db' in arguments:
		if len(arguments) <= 1:
			help()
		else:
			print(json.dumps(cvedb_INFO(), indent=2, sort_keys=True))
	elif '-cinfo' in arguments:
		if len(arguments) <= 1:
			help()
		else:
			print(json.dumps(cve_INFO(arguments[-1]), indent=2, sort_keys=True))
	elif '-cwe' in arguments:
		if len(arguments) <= 1:
			help()
		else:
			print(json.dumps(cvecwe_INFO(), indent=2, sort_keys=True))
	elif '-capec' in arguments:
		if len(arguments) <= 1:
			help()
		else:
			print(json.dumps(cvecapec_INFO(arguments[-1]), indent=2, sort_keys=True))
	elif '-h' in arguments or '--help' in arguments:
		help()
	else:
		help()
		
else:
	help()
